#!/usr/bin/env ruby

transcript_file = ARGV[0]
truth_file = ARGV[1]

all_exon_positions = Array.new
exon_positions = Array.new
File.open(transcript_file).each do |line|
  line.chomp!
  if line =~ /\ttranscript\t/
    all_exon_positions << exon_positions.sort
    exon_positions = Array.new
    next
  end
  info = line.split("\t")
  left_boundary = info[3].to_i
  exon_positions << left_boundary
  right_boundary = info[4].to_i
  exon_positions << right_boundary
end


# First entry is empty
all_exon_positions.delete_at(0)
number_of_all_genes = all_exon_positions.length

all_actual_exon_positions = Array.new
File.open(truth_file).each do |line|
  line.chomp!
  info = line.split("\t")
  left_boundaries = info[5].split(",")
  right_bounderies = info[6].split(",")
  actual_exon_positions = Array.new
  left_boundaries.each_with_index do |left_boundary,i|
    # +1 since bed-files are 0-based
    actual_exon_positions << left_boundary.to_i + 1
    actual_exon_positions << right_bounderies[i].to_i
  end
  all_actual_exon_positions << actual_exon_positions.sort
end

strongly_true_positives = 0
strongly_false_positives = 0
strongly_true_positives_by_exon_count = Array.new()
strongly_false_positives_by_exon_count = Array.new()

### Are all exons correct?

all_exon_positions.each do |exon_positions|
  number = (exon_positions.length / 2 )
  if all_actual_exon_positions.index(exon_positions)
    strongly_true_positives += 1
    strongly_true_positives_by_exon_count[number] = 0 unless strongly_true_positives_by_exon_count[number]
    strongly_true_positives_by_exon_count[number] += 1
  else
    strongly_false_positives += 1
    strongly_false_positives_by_exon_count[number] = 0 unless strongly_false_positives_by_exon_count[number]
    strongly_false_positives_by_exon_count[number] += 1
  end
end

### Are all inner exons correct?

all_actual_inner_exon_positions = Array.new
all_actual_exon_positions.each do |actual_exon_positions|
  actual_exon_positions.delete_at(0)
  actual_exon_positions.delete_at(-1)
  all_actual_inner_exon_positions << actual_exon_positions
end

all_inner_exon_positions = Array.new
all_exon_positions.each do |exon_positions|
  exon_positions.delete_at(0)
  exon_positions.delete_at(-1)
  all_inner_exon_positions << exon_positions
end

weakly_true_positives = 0
weakly_false_positives = 0
weakly_true_positives_by_exon_count = Array.new
weakly_false_positives_by_exon_count = Array.new
all_inner_exon_positions.each do |inner_exon_positions|
  if inner_exon_positions.length == 0
    weakly_true_positives_by_exon_count[1] = 0 unless weakly_true_positives_by_exon_count[1]
    weakly_true_positives_by_exon_count[1] += 1
    weakly_true_positives += 1
    next
  end
  number = (inner_exon_positions.length / 2 ) + 1
  if all_actual_inner_exon_positions.index(inner_exon_positions)
    weakly_true_positives_by_exon_count[number] = 0 unless weakly_true_positives_by_exon_count[number]
    weakly_true_positives_by_exon_count[number] += 1
    weakly_true_positives += 1
  else
    weakly_false_positives_by_exon_count[number] = 0 unless weakly_false_positives_by_exon_count[number]
    weakly_false_positives_by_exon_count[number] += 1
    weakly_false_positives += 1
  end
end
range = (1..10).to_a
puts "=========="
puts "#_of_Exons\t#{range.join("\t")}\t..."
puts "StroTP\t#{strongly_true_positives_by_exon_count.join("\t")}"
puts "StroFP\t#{strongly_false_positives_by_exon_count.join("\t")}"
puts "WeakTP\t#{weakly_true_positives_by_exon_count.join("\t")}"
puts "WeakFP\t#{weakly_false_positives_by_exon_count.join("\t")}"
puts "Strongly True Positives:\t#{strongly_true_positives}"
puts "Strongly False Positives\t#{strongly_false_positives}"
puts "Weak True Positives:\t#{weakly_true_positives}"
puts "Weak False Positives\t#{weakly_false_positives}"
puts "=\t#{number_of_all_genes}"