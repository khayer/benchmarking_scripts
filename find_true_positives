#!/usr/bin/env ruby

transcript_file = ARGV[0]
truth_file = ARGV[1]

all_inner_junctions = Array.new
inner_junctions = Array.new
first_exon = false
right_boundary = ""
File.open(transcript_file).each do |line|
  #puts line
  if line =~ /\ttranscript\t/
    all_inner_junctions << inner_junctions.sort
    inner_junctions = Array.new
    first_exon = true
    next
  end
  inner_junctions << right_boundary unless first_exon
  info = line.split("\t")
  if first_exon
    first_exon = false
    right_boundary = info[4].to_i
  else
    left_boundary = info[3].to_i
    inner_junctions << left_boundary
    right_boundary = info[4].to_i
  end
end

# First entry is empty
all_inner_junctions.delete_at(0)
number_of_all_genes = all_inner_junctions.length
all_actual_inner_junctions = Array.new
File.open(truth_file).each do |line|
  line.chomp!
  info = line.split("\t")
  left_boundaries = info[5].split(",")
  right_bounderies = info[6].split(",")
  first = true
  actual_inner_junctions = Array.new
  left_boundaries.each_with_index do |left_boundary,i|
    if first
      first = false
    else
      # +1 since bed-files are 0-based (???)
      actual_inner_junctions << left_boundary.to_i + 1
    end
    actual_inner_junctions << right_bounderies[i].to_i
  end
  actual_inner_junctions.pop
  all_actual_inner_junctions << actual_inner_junctions.sort
end

true_positives = 0
false_positives = 0
all_inner_junctions.each do |inner_junctions|
  if all_actual_inner_junctions.index(inner_junctions)
    true_positives += 1
  else
    #puts inner_junctions.join("\t")
    #STDIN.gets
    false_positives += 1
  end
end

puts "True Positives:\t#{true_positives}"
puts "False Positives\t#{false_positives}"
puts "=\t#{number_of_all_genes}"